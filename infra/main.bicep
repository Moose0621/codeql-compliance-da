// Main Bicep template for CodeQL Compliance Dashboard
// This orchestrates all Azure resources needed for the application

@description('Environment name (dev, staging, prod)')\nparam environmentName string = 'dev'\n\n@description('Location for all resources')\nparam location string = resourceGroup().location\n\n@description('Application name prefix')\nparam appName string = 'codeql-compliance'\n\n@description('SKU for App Service Plan')\nparam appServicePlanSku string = 'B1'\n\n@description('GitHub repository for Static Web App')\nparam githubRepo string = ''\n\n@description('GitHub branch for deployment')\nparam githubBranch string = 'main'\n\n// Generate unique suffix for resources\nvar uniqueSuffix = substring(uniqueString(resourceGroup().id, appName), 0, 6)\nvar resourcePrefix = '${appName}-${environmentName}-${uniqueSuffix}'\n\n// Static Web App\nmodule staticWebApp 'modules/static-web-app.bicep' = {\n  name: 'staticWebApp'\n  params: {\n    name: '${resourcePrefix}-swa'\n    location: location\n    githubRepo: githubRepo\n    githubBranch: githubBranch\n    environmentName: environmentName\n  }\n}\n\n// Azure Functions for backend API\nmodule functions 'modules/functions.bicep' = {\n  name: 'functions'\n  params: {\n    name: '${resourcePrefix}-func'\n    location: location\n    appServicePlanSku: appServicePlanSku\n    environmentName: environmentName\n    keyVaultName: keyVault.outputs.name\n    storageAccountName: storage.outputs.name\n    appInsightsInstrumentationKey: appInsights.outputs.instrumentationKey\n  }\n}\n\n// Key Vault for secrets management\nmodule keyVault 'modules/key-vault.bicep' = {\n  name: 'keyVault'\n  params: {\n    name: '${resourcePrefix}-kv'\n    location: location\n    environmentName: environmentName\n    functionsAppPrincipalId: functions.outputs.principalId\n  }\n}\n\n// Storage Account for audit logs and cache\nmodule storage 'modules/storage.bicep' = {\n  name: 'storage'\n  params: {\n    name: '${replace(resourcePrefix, '-', '')}st' // Storage names can't have dashes\n    location: location\n    environmentName: environmentName\n    functionsAppPrincipalId: functions.outputs.principalId\n  }\n}\n\n// Application Insights for observability\nmodule appInsights 'modules/app-insights.bicep' = {\n  name: 'appInsights'\n  params: {\n    name: '${resourcePrefix}-ai'\n    location: location\n    environmentName: environmentName\n  }\n}\n\n// Outputs for use in CI/CD pipelines\noutput staticWebAppName string = staticWebApp.outputs.name\noutput staticWebAppUrl string = staticWebApp.outputs.url\noutput staticWebAppApiToken string = staticWebApp.outputs.apiToken\noutput functionsAppName string = functions.outputs.name\noutput functionsAppUrl string = functions.outputs.url\noutput keyVaultName string = keyVault.outputs.name\noutput storageAccountName string = storage.outputs.name\noutput appInsightsName string = appInsights.outputs.name\noutput appInsightsInstrumentationKey string = appInsights.outputs.instrumentationKey
