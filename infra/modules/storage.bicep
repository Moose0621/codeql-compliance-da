// Azure Storage Account module for audit logs and cache\n@description('Storage Account name')\nparam name string\n\n@description('Location for Storage Account')\nparam location string\n\n@description('Environment name')\nparam environmentName string\n\n@description('Functions App principal ID for RBAC')\nparam functionsAppPrincipalId string\n\n// Storage Account\nresource storageAccount 'Microsoft.Storage/storageAccounts@2023-01-01' = {\n  name: name\n  location: location\n  tags: {\n    Environment: environmentName\n    Application: 'CodeQL-Compliance-Dashboard'\n    ManagedBy: 'Bicep'\n  }\n  sku: {\n    name: 'Standard_LRS' // Locally redundant storage\n  }\n  kind: 'StorageV2'\n  properties: {\n    accessTier: 'Hot'\n    allowBlobPublicAccess: false\n    allowSharedKeyAccess: true\n    minimumTlsVersion: 'TLS1_2'\n    supportsHttpsTrafficOnly: true\n    encryption: {\n      services: {\n        blob: {\n          enabled: true\n        }\n        file: {\n          enabled: true\n        }\n        table: {\n          enabled: true\n        }\n      }\n      keySource: 'Microsoft.Storage'\n    }\n    networkAcls: {\n      defaultAction: 'Allow' // Restrict in production\n      bypass: 'AzureServices'\n    }\n  }\n}\n\n// Blob service for audit logs\nresource blobService 'Microsoft.Storage/storageAccounts/blobServices@2023-01-01' = {\n  parent: storageAccount\n  name: 'default'\n  properties: {\n    deleteRetentionPolicy: {\n      enabled: true\n      days: 30\n    }\n    containerDeleteRetentionPolicy: {\n      enabled: true\n      days: 7\n    }\n  }\n}\n\n// Container for audit logs\nresource auditLogsContainer 'Microsoft.Storage/storageAccounts/blobServices/containers@2023-01-01' = {\n  parent: blobService\n  name: 'audit-logs'\n  properties: {\n    publicAccess: 'None'\n  }\n}\n\n// Container for export files\nresource exportsContainer 'Microsoft.Storage/storageAccounts/blobServices/containers@2023-01-01' = {\n  parent: blobService\n  name: 'exports'\n  properties: {\n    publicAccess: 'None'\n  }\n}\n\n// Table service for structured data\nresource tableService 'Microsoft.Storage/storageAccounts/tableServices@2023-01-01' = {\n  parent: storageAccount\n  name: 'default'\n}\n\n// Table for scan requests audit trail\nresource scanRequestsTable 'Microsoft.Storage/storageAccounts/tableServices/tables@2023-01-01' = {\n  parent: tableService\n  name: 'scanrequests'\n}\n\n// Table for export history\nresource exportHistoryTable 'Microsoft.Storage/storageAccounts/tableServices/tables@2023-01-01' = {\n  parent: tableService\n  name: 'exporthistory'\n}\n\n// RBAC role assignment for Functions App\nresource storageDataContributorRole 'Microsoft.Authorization/roleAssignments@2022-04-01' = {\n  name: guid(storageAccount.id, functionsAppPrincipalId, 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')\n  scope: storageAccount\n  properties: {\n    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe') // Storage Blob Data Contributor\n    principalId: functionsAppPrincipalId\n    principalType: 'ServicePrincipal'\n  }\n}\n\nresource tableDataContributorRole 'Microsoft.Authorization/roleAssignments@2022-04-01' = {\n  name: guid(storageAccount.id, functionsAppPrincipalId, '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3')\n  scope: storageAccount\n  properties: {\n    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3') // Storage Table Data Contributor\n    principalId: functionsAppPrincipalId\n    principalType: 'ServicePrincipal'\n  }\n}\n\n// Output values\noutput name string = storageAccount.name\noutput id string = storageAccount.id\noutput primaryEndpoints object = storageAccount.properties.primaryEndpoints\noutput connectionString string = 'DefaultEndpointsProtocol=https;AccountName=${storageAccount.name};AccountKey=${storageAccount.listKeys().keys[0].value};EndpointSuffix=${environment().suffixes.storage}'
