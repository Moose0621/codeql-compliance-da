// Azure Functions module for backend API\n@description('Functions App name')\nparam name string\n\n@description('Location for the Functions App')\nparam location string\n\n@description('App Service Plan SKU')\nparam appServicePlanSku string = 'B1'\n\n@description('Environment name')\nparam environmentName string\n\n@description('Key Vault name for secrets')\nparam keyVaultName string\n\n@description('Storage Account name')\nparam storageAccountName string\n\n@description('Application Insights instrumentation key')\nparam appInsightsInstrumentationKey string\n\n// App Service Plan\nresource appServicePlan 'Microsoft.Web/serverfarms@2023-01-01' = {\n  name: '${name}-plan'\n  location: location\n  tags: {\n    Environment: environmentName\n    Application: 'CodeQL-Compliance-Dashboard'\n    ManagedBy: 'Bicep'\n  }\n  sku: {\n    name: appServicePlanSku\n    tier: appServicePlanSku == 'Y1' ? 'Dynamic' : 'Basic'\n  }\n  properties: {\n    reserved: true // Linux\n  }\n}\n\n// Functions App\nresource functionsApp 'Microsoft.Web/sites@2023-01-01' = {\n  name: name\n  location: location\n  kind: 'functionapp,linux'\n  tags: {\n    Environment: environmentName\n    Application: 'CodeQL-Compliance-Dashboard'\n    ManagedBy: 'Bicep'\n  }\n  identity: {\n    type: 'SystemAssigned'\n  }\n  properties: {\n    serverFarmId: appServicePlan.id\n    httpsOnly: true\n    siteConfig: {\n      linuxFxVersion: 'NODE|20'\n      appSettings: [\n        {\n          name: 'AzureWebJobsStorage'\n          value: 'DefaultEndpointsProtocol=https;AccountName=${storageAccountName};AccountKey=${listKeys(resourceId('Microsoft.Storage/storageAccounts', storageAccountName), '2023-01-01').keys[0].value}'\n        }\n        {\n          name: 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING'\n          value: 'DefaultEndpointsProtocol=https;AccountName=${storageAccountName};AccountKey=${listKeys(resourceId('Microsoft.Storage/storageAccounts', storageAccountName), '2023-01-01').keys[0].value}'\n        }\n        {\n          name: 'WEBSITE_CONTENTSHARE'\n          value: '${name}-content'\n        }\n        {\n          name: 'FUNCTIONS_EXTENSION_VERSION'\n          value: '~4'\n        }\n        {\n          name: 'FUNCTIONS_WORKER_RUNTIME'\n          value: 'node'\n        }\n        {\n          name: 'WEBSITE_NODE_DEFAULT_VERSION'\n          value: '~20'\n        }\n        {\n          name: 'APPINSIGHTS_INSTRUMENTATIONKEY'\n          value: appInsightsInstrumentationKey\n        }\n        {\n          name: 'APPLICATIONINSIGHTS_CONNECTION_STRING'\n          value: 'InstrumentationKey=${appInsightsInstrumentationKey}'\n        }\n        {\n          name: 'KEY_VAULT_NAME'\n          value: keyVaultName\n        }\n        {\n          name: 'STORAGE_ACCOUNT_NAME'\n          value: storageAccountName\n        }\n        {\n          name: 'ENVIRONMENT'\n          value: environmentName\n        }\n      ]\n      cors: {\n        allowedOrigins: [\n          '*' // Will be restricted to specific domains in production\n        ]\n        supportCredentials: false\n      }\n    }\n  }\n}\n\n// Output values\noutput name string = functionsApp.name\noutput url string = 'https://${functionsApp.properties.defaultHostName}'\noutput principalId string = functionsApp.identity.principalId\noutput id string = functionsApp.id
