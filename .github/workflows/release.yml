name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_VERSION: '20.x'

permissions:
  contents: write
  id-token: write # for Azure OIDC

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for changelog

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build production
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          # Simple changelog from commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "## Changes" > CHANGELOG.md
            echo "Initial release" >> CHANGELOG.md
          else
            echo "## Changes since $LAST_TAG" > CHANGELOG.md
            git log --oneline --no-merges "$LAST_TAG"..HEAD | sed 's/^/- /' >> CHANGELOG.md
          fi
          
          # Set multiline output
          {
            echo 'changelog<<EOF'
            cat CHANGELOG.md
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Package build artifacts
        run: |
          cd dist
          zip -r ../codeql-compliance-dashboard-${{ github.ref_name }}.zip .

      - name: Create Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "${{ steps.changelog.outputs.changelog }}" \
            ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') && '--prerelease' || '' }} \
            codeql-compliance-dashboard-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: Deploy to Azure Production (Placeholder)
    runs-on: ubuntu-latest
    needs: release
    # Note: Enable when Azure environment is configured
    # environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deployment Placeholder
        run: |
          echo "### ðŸš€ Azure Deployment Placeholder" >> $GITHUB_STEP_SUMMARY
          echo "Release: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Built successfully. Configure Azure secrets to enable deployment." >> $GITHUB_STEP_SUMMARY
          echo "See docs/azure-deployment.md for setup instructions." >> $GITHUB_STEP_SUMMARY

      # Uncomment when Azure resources are configured:
      # - name: Azure Login (OIDC)
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # - name: Deploy to Azure Static Web Apps
      #   uses: Azure/static-web-apps-deploy@v1
      #   with:
      #     azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     action: "upload"
      #     app_location: "."
      #     output_location: "dist"
      #     api_location: "api"